{"version":3,"sources":["components/Theme/index.js","components/Header/GithubIcon.js","components/StartingPage/templates.js","components/Header/index.js","components/CreateFromTemplateDialog/index.js","components/StartingPage/index.js","components/OHAEditor/default-oha-object.js","utils/get-task-description.js","components/SampleContainer/LinkButton.js","components/SampleContainer/index.js","components/TextClassification/index.js","components/TextEntityRecognition/index.js","components/ImageSegmentation/index.js","components/DataEntry/index.js","components/BadOHA/index.js","components/EmptySampleContainer/index.js","components/UniversalDataViewer/index.js","components/OHAEditor/EditableTitleText.js","components/OHAEditor/index.js","components/ErrorToasts/index.js","components/LocalStorageApp/index.js","utils/use-errors.js","utils/use-local-storage.js","App.js","index.js"],"names":["useStyles","makeStyles","container","fontFamily","theme","createMuiTheme","typography","overrides","MuiButton","root","textTransform","Theme","_ref","children","classes","react_default","a","createElement","MuiThemeProvider_default","ThemeProvider","className","GitHub","props","SvgIcon","d","templates","name","Icon","RemoveRedEye","oha","interface","type","availableLabels","regionTypesAllowed","taskData","imageUrl","Edit","description","surveyjs","questions","title","pdfUrl","TextFormat","overlapAllowed","labels","id","displayName","document","headerButton","color","grow","flexGrow","list","width","HeaderContext","createContext","recentItems","Header","_ref$additionalButton","additionalButtons","_ref$title","c","_useState","useState","_useState2","Object","slicedToArray","drawerOpen","changeDrawerOpen","_useContext","useContext","onClickTemplate","onClickHome","onOpenFile","onOpenRecentItem","onDrop","useCallback","acceptedFiles","_useDropzone","useDropzone","getRootProps","getInputProps","Fragment","AppBar","position","Toolbar","IconButton","onClick","Menu_default","Typography","variant","noWrap","href","GithubIcon","Drawer","open","onClose","List","ListItem","button","ListItemIcon","Home_default","ListItemText","assign","NoteAdd_default","ListSubheader","length","style","textAlign","colors","map","ri","key","fileName","InsertDriveFile_default","template","window","location","bigButton","padding","height","border","margin","bigIcon","CreateFromTemplateDialog","onSelect","Dialog","DialogTitle","DialogContent","Button","DialogActions","contentTitle","paddingTop","paddingLeft","paddingRight","contentSubtitle","wordWrap","fontSize","concat","bigButtonContent","display","lineHeight","paddingBottom","flexDirection","alignItems","justifyContent","content","flexWrap","StartingPage","onFileDrop","onOpenTemplate","createFromTemplateDialogOpen","changeCreateFromTemplateDialogOpen","useMemo","isDragActive","Grid","item","xs","Description_default","default_oha_object","trim","getTaskDescription","taskDataItem","url","replace","linkButtonContainer","marginLeft","marginRight","linkButton","cursor","textDecoration","LinkButton","text","footer","backgroundColor","marginTop","footerContent","footerBorder","borderTop","footerCount","allSamplesButton","sampleIcon","menuButton","buttons","& > *","& img","maxWidth","maxHeight","sectionHeader","fontWeight","SampleContainer","_ref$hideDescription","hideDescription","defaultHideDescription","_ref$requireCompleteT","lastSampleExitText","requireCompleteToPressNext","minContentHeight","currentSampleIndex","totalSamples","onChangeSample","_ref$taskOutput","taskOutput","changeHideDescription","_useState3","_useState4","sampleDrawerOpen","changeSampleDrawerOpen","sm","md","react_markdown_default","escapeHtml","source","minHeight","KeyboardArrowLeft_default","disabled","KeyboardArrowRight_default","anchor","minWidth","range","i","undefined","CheckCircle_default","RadioButtonUnchecked_default","TextClassification","changeCurrentSampleIndex","initialLabels","label","components_SampleContainer","containerProps","sampleIndex","NLPAnnotator","multipleLabels","multiple","onFinish","result","onSaveTaskOutputItem","simpleSequenceToEntitySequence","simpleSeq","entSeq","charsPassed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","seq","value","push","start","end","err","return","TextEntityRecognition","initialSequence","doc","toConsumableArray","sort","b","nextEntity","entitySequenceToSimpleSeq","entities","getRandomColor","min","max","h","Math","floor","random","rid","toString","split","convertToRIARegionFmt","region","regionType","cls","classification","x","centerX","y","centerY","w","points","p","Error","JSON","stringify","regionTypeToTool","bounding-box","polygon","full-segmentation","point","ImageSegmentation","_ref4","iface","_ref4$taskData","_ref4$taskOutput","selectedIndex","_iface$regionTypesAll","labelProps","Boolean","multipleRegionLabels","regionClsList","regionTagList","react_image_annotate","selectedImage","src","taskDescription","enabledTools","rt","filter","images","taskDatum","index","_ref3","td","output","console","log","regions","Array","isArray","convertToRIAImageFmt","onExit","DataEntry","Survey_default","form","defaultAnswers","completeText","answers","explain","BadOHA","component","EmptySampleContainer","UniversalDataViewer","hideHeader","datasetName","components_DataEntry","components_TextClassification","components_TextEntityRecognition","textField","EditableTitleText","onChange","editing","_useState2$","newValue","changeEditing","useEffect","listener","e","addEventListener","removeEventListener","timeout","setTimeout","SAVE_WAIT","clearTimeout","TextField","autoFocus","InputProps","inputProps","target","saveIcon","editIcon","OHAEditor","_ref$fileName","onChangeFileName","_ref$onChangeContent","onChangeContent","_ref$onChangeOHA","onChangeOHA","_ref$initialMode","initialMode","mode","changeMode","defaultOHAObject","jsonText","changeJSONText","parse","Edit_default","lib_default","editorProps","$blockScrolling","Infinity","t","components_UniversalDataViewer","newOHA","objectSpread","bottom","left","right","pointerEvents","errorBox","red","marginBottom","ErrorToasts","errors","Collapse","in","life","Fade","message","empty","LocalStorageApp","pageName","changePageName","currentFile","changeCurrentFile","_useState5","_useState6","changeOHA","_useErrors","changeErrors","interval","setInterval","clearInterval","useErrors","_useErrors2","addError","_useLocalStorage","defaultValue","localStorage","getItem","state","changeState","setItem","useLocalStorage","_useLocalStorage2","changeRecentItems","onCreateTemplate","openRecentItem","handleOpenFile","file","reader","FileReader","onload","readAsText","Provider","newName","newContent","newFile","includes","slice","App","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.c7ff6684.chunk.js","sourcesContent":["import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\"\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\"\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\"\nimport \"./theme.css\"\n\nconst useStyles = makeStyles({\n  container: {\n    fontFamily: '\"Inter\", sans-serif'\n  }\n})\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Inter\", \"Roboto\", sans-serif'\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: \"none\"\n      }\n    }\n  }\n})\n\nexport default ({ children }: any) => {\n  const classes = useStyles()\n  return (\n    <MuiThemeProvider theme={theme}>\n      <ThemeProvider theme={theme}>\n        <div className={classes.container}>{children}</div>\n      </ThemeProvider>\n    </MuiThemeProvider>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nfunction GitHub(props: Object) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12.007 0C6.12 0 1.1 4.27.157 10.08c-.944 5.813 2.468 11.45 8.054 13.312.19.064.397.033.555-.084.16-.117.25-.304.244-.5v-2.042c-3.33.735-4.037-1.56-4.037-1.56-.22-.726-.694-1.35-1.334-1.756-1.096-.75.074-.735.074-.735.773.103 1.454.557 1.846 1.23.694 1.21 2.23 1.638 3.45.96.056-.61.327-1.178.766-1.605-2.67-.3-5.462-1.335-5.462-6.002-.02-1.193.42-2.35 1.23-3.226-.327-1.015-.27-2.116.166-3.09 0 0 1.006-.33 3.3 1.23 1.966-.538 4.04-.538 6.003 0 2.295-1.5 3.3-1.23 3.3-1.23.445 1.006.49 2.144.12 3.18.81.877 1.25 2.033 1.23 3.226 0 4.607-2.805 5.627-5.476 5.927.578.583.88 1.386.825 2.206v3.29c-.005.2.092.393.26.507.164.115.377.14.565.063 5.568-1.88 8.956-7.514 8.007-13.313C22.892 4.267 17.884.007 12.008 0z\" />\n    </SvgIcon>\n  )\n}\n\nexport default GitHub\n","// @flow\n\nimport RemoveRedEye from \"@material-ui/icons/RemoveRedEye\"\nimport TextFormat from \"@material-ui/icons/TextFormat\"\nimport Edit from \"@material-ui/icons/Edit\"\n\nexport default [\n  {\n    name: \"Computer Vision\",\n    Icon: RemoveRedEye,\n    oha: {\n      interface: {\n        type: \"image_segmentation\",\n        availableLabels: [\"valid\", \"invalid\"],\n        regionTypesAllowed: [\n          \"bounding-box\",\n          \"polygon\",\n          \"full-segmentation\",\n          \"point\",\n          \"pixel-mask\"\n        ]\n      },\n      taskData: [\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image1.jpg\"\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image2.jpg\"\n        }\n      ]\n    }\n  },\n  {\n    name: \"Data Entry\",\n    Icon: Edit,\n    oha: {\n      interface: {\n        type: \"data_entry\",\n        description: \"# Markdown description here\",\n        surveyjs: {\n          questions: [\n            {\n              type: \"text\",\n              name: \"document_title\",\n              title: \"Title of Document\"\n            }\n          ]\n        }\n      },\n      taskData: [\n        {\n          pdfUrl: \"https://arxiv.org/pdf/1906.01969.pdf\"\n        },\n        {\n          pdfUrl: \"https://arxiv.org/pdf/1908.07069.pdf\"\n        }\n      ]\n    }\n  },\n  {\n    name: \"Natural Language\",\n    Icon: TextFormat,\n    oha: {\n      interface: {\n        type: \"text_entity_recognition\",\n        overlapAllowed: false,\n        labels: [\n          {\n            id: \"food\",\n            displayName: \"Food\",\n            description: \"Edible item.\"\n          },\n          {\n            id: \"hat\",\n            displayName: \"Hat\",\n            description: \"Something worn on the head.\"\n          }\n        ]\n      },\n      taskData: [\n        {\n          document:\n            \"This strainer makes a great hat, I'll wear it while I serve spaghetti!\"\n        }\n      ]\n    }\n  }\n]\n","// @flow\n\nimport React, { useState, createContext, useContext, useCallback } from \"react\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport CodeIcon from \"@material-ui/icons/Code\"\nimport HomeIcon from \"@material-ui/icons/Home\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport Button from \"@material-ui/core/Button\"\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\"\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport * as colors from \"@material-ui/core/colors\"\nimport GithubIcon from \"./GithubIcon\"\nimport templates from \"../StartingPage/templates\"\nimport { useDropzone } from \"react-dropzone\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  headerButton: {\n    color: \"#fff\"\n  },\n  grow: { flexGrow: 1 },\n  list: {\n    width: 300\n  }\n})\n\nexport const HeaderContext = createContext({ recentItems: [] })\n\nexport default ({\n  additionalButtons = [],\n  title = \"Universal Data Tool - Welcome!\"\n}) => {\n  const c = useStyles()\n  const [drawerOpen, changeDrawerOpen] = useState(false)\n  let {\n    recentItems,\n    onClickTemplate,\n    onClickHome,\n    onOpenFile,\n    onOpenRecentItem\n  } = useContext(HeaderContext)\n  if (!recentItems) recentItems = []\n\n  const onDrop = useCallback(acceptedFiles => {\n    onOpenFile(acceptedFiles[0])\n  }, [])\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop })\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            onClick={() => changeDrawerOpen(true)}\n            className={c.headerButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={c.title} variant=\"h6\" noWrap>\n            {title}\n          </Typography>\n          <div className={c.grow} />\n          {additionalButtons}\n          <IconButton\n            href=\"https://github.com/openhumanannotation/universal-data-tool\"\n            className={c.headerButton}\n          >\n            <GithubIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer open={drawerOpen} onClose={() => changeDrawerOpen(false)}>\n        <List className={c.list}>\n          <ListItem onClick={onClickHome} button>\n            <ListItemIcon>\n              <HomeIcon />\n            </ListItemIcon>\n            <ListItemText>Home</ListItemText>\n          </ListItem>\n          <ListItem {...getRootProps()} button>\n            <ListItemIcon>\n              <NoteAddIcon />\n            </ListItemIcon>\n            <ListItemText>Open File</ListItemText>\n            <input {...getInputProps()} />\n          </ListItem>\n          <ListSubheader>Recent Files</ListSubheader>\n          {recentItems.length === 0 ? (\n            <ListItem>\n              <ListItemText\n                style={{ textAlign: \"center\", color: colors.grey[500] }}\n              >\n                No Recent Items\n              </ListItemText>\n            </ListItem>\n          ) : (\n            recentItems.map(ri => (\n              <ListItem\n                key={ri.fileName}\n                button\n                onClick={() => {\n                  onOpenRecentItem(ri)\n                }}\n              >\n                <ListItemIcon>\n                  <FileIcon />\n                </ListItemIcon>\n                <ListItemText>{ri.fileName}</ListItemText>\n              </ListItem>\n            ))\n          )}\n          <ListSubheader>Create From Template</ListSubheader>\n          {templates.map(template => (\n            <ListItem\n              key={template.name}\n              button\n              onClick={() => onClickTemplate(template)}\n            >\n              <ListItemIcon>\n                <template.Icon />\n              </ListItemIcon>\n              <ListItemText>{template.name}</ListItemText>\n            </ListItem>\n          ))}\n          <ListSubheader>Explore More</ListSubheader>\n          {/* <ListItem button>\n            <ListItemIcon>\n              <CodeIcon />\n            </ListItemIcon>\n            <ListItemText>Integrate</ListItemText>\n          </ListItem> */}\n          <ListItem\n            button\n            onClick={() => {\n              window.location.href =\n                \"https://github.com/OpenHumanAnnotation/universal-data-tool/releases\"\n            }}\n          >\n            <ListItemIcon>\n              <GithubIcon />\n            </ListItemIcon>\n            <ListItemText>Github</ListItemText>\n          </ListItem>\n        </List>\n      </Drawer>\n    </>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport templates from \"../StartingPage/templates\"\nimport { grey } from \"@material-ui/core/colors\"\n\nconst useStyles = makeStyles({\n  bigButton: {\n    padding: 10,\n    width: 150,\n    height: 120,\n    border: \"1px solid #ccc\",\n    margin: 10\n  },\n  bigIcon: {\n    width: 48,\n    height: 48\n  }\n})\n\nexport default ({ open, onClose, onSelect }) => {\n  const c = useStyles()\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Create from Template</DialogTitle>\n      <DialogContent>\n        {templates.map(template => (\n          <Button onClick={() => onSelect(template)} className={c.bigButton}>\n            <div>\n              <div>{template.name}</div>\n              <div>\n                <template.Icon className={c.bigIcon} />\n              </div>\n            </div>\n          </Button>\n        ))}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => onClose()}>Close</Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","// @flow\n\nimport React, { useState, useMemo } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Header from \"../Header\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport templates from \"./templates\"\nimport * as colors from \"@material-ui/core/colors\"\nimport VideoIcon from \"@material-ui/icons/OndemandVideo\"\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\"\nimport TemplateIcon from \"@material-ui/icons/Description\"\nimport { useDropzone } from \"react-dropzone\"\nimport CreateFromTemplateDialog from \"../CreateFromTemplateDialog\"\n\nconst useStyles = makeStyles({\n  title: {},\n  contentTitle: {\n    paddingTop: 50,\n    paddingLeft: 20,\n    paddingRight: 20,\n    textAlign: \"center\"\n  },\n  contentSubtitle: {\n    textAlign: \"center\",\n    wordWrap: \"normal\",\n    paddingLeft: 40,\n    paddingRight: 40,\n    padding: 30\n  },\n  bigButton: {\n    width: 240,\n    fontSize: 24,\n    margin: 20,\n    border: `1px dashed ${colors.grey[500]}`\n  },\n  bigButtonContent: {\n    display: \"flex\",\n    lineHeight: 1.5,\n    height: 160,\n    paddingTop: 20,\n    paddingBottom: 20,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  bigIcon: {\n    margin: 20,\n    width: 64,\n    height: 64\n  },\n  grow: { flexGrow: 1 },\n  content: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\"\n  },\n  headerButton: { color: \"#fff\" }\n})\n\nexport default ({ onFileDrop, onOpenTemplate }) => {\n  const c = useStyles()\n  const [\n    createFromTemplateDialogOpen,\n    changeCreateFromTemplateDialogOpen\n  ] = useState(false)\n  const onDrop = useMemo(\n    () => {\n      return acceptedFiles => {\n        onFileDrop(acceptedFiles[0])\n      }\n    },\n    [onFileDrop]\n  )\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n  return (\n    <div>\n      <CreateFromTemplateDialog\n        open={createFromTemplateDialogOpen}\n        onSelect={template => onOpenTemplate(template)}\n        onClose={() => changeCreateFromTemplateDialogOpen(false)}\n      />\n      <Header\n        additionalButtons={[\n          <Button\n            href=\"https://github.com/OpenHumanAnnotation/universal-data-tool/releases\"\n            className={c.headerButton}\n          >\n            Download Universal Data Tool\n          </Button>\n        ]}\n      />\n      <Grid container>\n        <Grid item xs={12}>\n          <Typography className={c.contentTitle} variant=\"h3\" noWrap>\n            Universal Data Tool\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography className={c.contentSubtitle} variant=\"h5\">\n            Annotate data for Computer Vision, Natural Language Processing, Data\n            Entry and More.\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <div className={c.content}>\n            <Button {...getRootProps()} className={c.bigButton}>\n              <div className={c.bigButtonContent}>\n                <div>{!isDragActive ? \"Open File\" : \"Drop File Here\"}</div>\n                <FileIcon className={c.bigIcon} />\n                <input {...getInputProps()} />\n              </div>\n            </Button>\n            <Button\n              onClick={() => {\n                changeCreateFromTemplateDialogOpen(true)\n              }}\n              className={c.bigButton}\n            >\n              <div className={c.bigButtonContent}>\n                <div>Create from Template</div>\n                <TemplateIcon className={c.bigIcon} />\n              </div>\n            </Button>\n            {/* <Button className={c.bigButton}>\n              <div className={c.bigButtonContent}>\n                <div>Watch Tutorials</div>\n                <VideoIcon className={c.bigIcon} />\n              </div>\n            </Button> */}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","export default `\n{\n  \"interface\": {\n    \"type\": \"data_entry\",\n    \"description\": \"# Markdown description here\",\n    \"surveyjs\": {\n      \"questions\": [\n        {\n          \"type\": \"text\",\n          \"name\": \"question1\",\n          \"title\": \"Some question title here\"\n        }\n      ]\n    }\n  },\n  \"taskData\": []\n}\n`.trim()\n","export default function getTaskDescription(taskDataItem) {\n  const { description, imageUrl, url, pdfUrl } = taskDataItem\n  if (description) return description\n  if (imageUrl) return `![${imageUrl}](${imageUrl})`\n  if (pdfUrl)\n    return (\n      `[PDF Link](${pdfUrl})` +\n      `<object data=\"${pdfUrl.replace(\n        \"http://\",\n        \"https://\"\n      )}\" type=\"application/pdf\" width=\"100%\" height=\"600px\"></object>`\n    )\n  if (url) return `Use this [Link](${url})`\n  return null\n}\n","// @flow\nimport React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  linkButtonContainer: {\n    marginLeft: 8,\n    marginRight: 8\n  },\n  linkButton: {\n    textTransform: \"none\",\n    cursor: \"pointer\",\n    textDecoration: \"underline\"\n  }\n})\n\nexport default ({ onClick, text }: { onClick: Function, text: string }) => {\n  const c = useStyles()\n  return (\n    <span className={c.linkButtonContainer}>\n      (\n      <span onClick={onClick} className={c.linkButton}>\n        {text}\n      </span>\n      )\n    </span>\n  )\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport { makeStyles } from \"@material-ui/core\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Button from \"@material-ui/core/Button\"\nimport ReactMarkdown from \"react-markdown\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport ScatterPlotIcon from \"@material-ui/icons/ScatterPlot\"\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\"\nimport LeftIcon from \"@material-ui/icons/KeyboardArrowLeft\"\nimport InnerCircleIcon from \"@material-ui/icons/RadioButtonChecked\"\nimport CircleIcon from \"@material-ui/icons/RadioButtonUnchecked\"\nimport CheckCircle from \"@material-ui/icons/CheckCircle\"\nimport Typography from \"@material-ui/core/Typography\"\nimport GithubIcon from \"../Header/GithubIcon.js\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport Divider from \"@material-ui/core/Divider\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport LinkButton from \"./LinkButton\"\nimport range from \"lodash/range\"\n\nconst useStyles = makeStyles(theme => ({\n  footer: {\n    backgroundColor: \"#fff\",\n    marginTop: 40\n  },\n  footerContent: {\n    alignItems: \"center\",\n    padding: 20,\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  footerBorder: {\n    borderTop: \"1px solid #ccc\",\n    marginLeft: 20,\n    marginRight: 20\n  },\n  footerCount: {\n    display: \"inline-flex\"\n  },\n  allSamplesButton: {\n    color: \"#fff\",\n    border: \"1px solid rgba(255,255,255,0.5)\",\n    marginRight: 10,\n    paddingLeft: 8\n  },\n  sampleIcon: {\n    marginRight: 8\n  },\n  menuButton: {\n    marginRight: 8,\n    color: \"#fff\"\n  },\n  grow: {\n    flexGrow: 1\n  },\n  buttons: {\n    \"& > *\": {\n      margin: 4\n    }\n  },\n  description: {\n    padding: 10,\n    \"& img\": {\n      maxWidth: \"calc(100% - 200px)\",\n      maxHeight: 600\n    }\n  },\n  sectionHeader: {\n    fontWeight: 700,\n    fontSize: 12,\n    padding: 10,\n    paddingTop: 16,\n    textTransform: \"uppercase\",\n    color: colors.grey[600]\n  },\n  content: {\n    padding: 10\n    // minHeight: \"calc(100vh - 200px)\"\n  }\n}))\n\nexport const SampleContainer = ({\n  hideDescription: defaultHideDescription = false,\n  lastSampleExitText,\n  requireCompleteToPressNext = false,\n  taskData,\n  minContentHeight,\n  currentSampleIndex,\n  totalSamples,\n  onChangeSample,\n  taskOutput = [],\n  description,\n  children\n}) => {\n  const c = useStyles()\n  const [hideDescription, changeHideDescription] = useState(\n    defaultHideDescription\n  )\n  const [sampleDrawerOpen, changeSampleDrawerOpen] = useState(false)\n  return (\n    <>\n      <Grid container>\n        {!hideDescription && (\n          <Grid item xs={12} sm={12} md={6}>\n            <div className={c.sectionHeader}>\n              Description\n              <LinkButton\n                onClick={() => changeHideDescription(true)}\n                text=\"hide\"\n              />\n            </div>\n            <div className={c.description}>\n              <ReactMarkdown escapeHtml={false} source={description} />\n            </div>\n          </Grid>\n        )}\n        <Grid item xs={12} sm={12} md={hideDescription ? 12 : 6}>\n          <div className={c.sectionHeader}>\n            Sample {totalSamples > 1 ? currentSampleIndex + 1 : \"\"}\n            {hideDescription && (\n              <LinkButton\n                onClick={() => changeHideDescription(false)}\n                text=\"show description\"\n              />\n            )}\n            <LinkButton\n              onClick={() => changeSampleDrawerOpen(true)}\n              text=\"view all\"\n            />\n          </div>\n          <div style={{ minHeight: minContentHeight }} className={c.content}>\n            {children}\n          </div>\n        </Grid>\n        {totalSamples > 1 && (\n          <Grid item xs={12}>\n            <div className={c.footer}>\n              <div className={c.footerBorder} />\n              <div className={c.footerContent}>\n                <Button\n                  onClick={() =>\n                    onChangeSample(\n                      (currentSampleIndex - 1 + totalSamples) % totalSamples\n                    )\n                  }\n                >\n                  <LeftIcon /> Prev Sample\n                </Button>\n                <Button\n                  onClick={() => changeSampleDrawerOpen(true)}\n                  className={c.footerCount}\n                >\n                  {currentSampleIndex + 1} / {totalSamples}\n                </Button>\n                <Button\n                  disabled={\n                    requireCompleteToPressNext &&\n                    !taskOutput[currentSampleIndex]\n                  }\n                  onClick={() =>\n                    onChangeSample((currentSampleIndex + 1) % totalSamples)\n                  }\n                >\n                  {requireCompleteToPressNext && !taskOutput[currentSampleIndex]\n                    ? \"Save to Continue\"\n                    : \"Next Sample\"}\n                  <RightIcon />\n                </Button>\n              </div>\n            </div>\n          </Grid>\n        )}\n      </Grid>\n      <Drawer\n        open={sampleDrawerOpen}\n        anchor=\"left\"\n        onClose={() => changeSampleDrawerOpen(false)}\n      >\n        <List style={{ minWidth: 300 }}>\n          <ListSubheader>Samples</ListSubheader>\n          {range(0, totalSamples).map(i => (\n            <ListItem\n              style={{\n                backgroundColor:\n                  i === currentSampleIndex ? colors.grey[200] : undefined\n              }}\n              button\n              onClick={() => onChangeSample(i)}\n            >\n              <ListItemIcon\n                style={{\n                  color: i === currentSampleIndex ? colors.blue[500] : undefined\n                }}\n              >\n                {taskOutput[i] ? <CheckCircle /> : <CircleIcon />}\n              </ListItemIcon>\n              <ListItemText>Sample {i + 1}</ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </>\n  )\n}\n\nexport default SampleContainer\n","import React, { useState } from \"react\"\nimport getTaskDescription from \"../../utils/get-task-description.js\"\nimport SampleContainer from \"../SampleContainer\"\nimport NLPAnnotator from \"react-nlp-annotate/components/NLPAnnotator\"\n\nexport const TextClassification = props => {\n  const [currentSampleIndex, changeCurrentSampleIndex] = useState(0)\n  const initialLabels =\n    props.taskOutput && props.taskOutput[currentSampleIndex]\n      ? [props.taskOutput[currentSampleIndex].label] ||\n        props.taskOutput[currentSampleIndex].labels\n      : undefined\n  return (\n    <SampleContainer\n      {...props.containerProps}\n      currentSampleIndex={currentSampleIndex}\n      totalSamples={props.taskData.length}\n      taskOutput={props.taskOutput}\n      description={\n        getTaskDescription(props.taskData[currentSampleIndex]) ||\n        props.interface.description\n      }\n      onChangeSample={sampleIndex => changeCurrentSampleIndex(sampleIndex)}\n    >\n      <NLPAnnotator\n        key={currentSampleIndex}\n        type=\"label-document\"\n        labels={props.interface.labels}\n        multipleLabels={props.interface.multiple}\n        document={props.taskData[currentSampleIndex].document}\n        initialLabels={initialLabels}\n        onFinish={result => {\n          props.onSaveTaskOutputItem(currentSampleIndex, result)\n        }}\n      />\n    </SampleContainer>\n  )\n}\n\nexport default TextClassification\n","import React, { useState } from \"react\"\nimport getTaskDescription from \"../../utils/get-task-description.js\"\nimport SampleContainer from \"../SampleContainer\"\nimport NLPAnnotator from \"react-nlp-annotate/components/NLPAnnotator\"\n\nconst simpleSequenceToEntitySequence = simpleSeq => {\n  const entSeq = []\n  let charsPassed = 0\n  for (const seq of simpleSeq) {\n    if (seq.label) {\n      entSeq.push({\n        text: seq.text,\n        label: seq.label,\n        start: charsPassed,\n        end: charsPassed + seq.text.length\n      })\n    }\n    charsPassed += seq.text.length\n  }\n  return entSeq\n}\n\nconst entitySequenceToSimpleSeq = (doc, entSeq) => {\n  if (!entSeq) return undefined\n  const simpleSeq = []\n  entSeq = [...entSeq]\n  entSeq.sort((a, b) => a.start - b.start)\n  let nextEntity = 0\n  for (let i = 0; i < doc.length; i++) {\n    if ((entSeq[nextEntity] || {}).start === i) {\n      simpleSeq.push({\n        text: entSeq[nextEntity].text,\n        label: entSeq[nextEntity].label\n      })\n      i = entSeq[nextEntity].end\n      nextEntity += 1\n    } else {\n      if (simpleSeq.length === 0 || simpleSeq[simpleSeq.length - 1].label) {\n        simpleSeq.push({ text: doc[i] })\n      } else {\n        simpleSeq[simpleSeq.length - 1].text += doc[i]\n      }\n    }\n  }\n  return simpleSeq\n}\n\nexport const TextEntityRecognition = props => {\n  const [currentSampleIndex, changeCurrentSampleIndex] = useState(0)\n  const initialSequence =\n    props.taskOutput && props.taskOutput[currentSampleIndex]\n      ? entitySequenceToSimpleSeq(\n          props.taskData[currentSampleIndex].document,\n          props.taskOutput[currentSampleIndex].entities\n        )\n      : undefined\n\n  return (\n    <SampleContainer\n      {...props.containerProps}\n      currentSampleIndex={currentSampleIndex}\n      totalSamples={props.taskData.length}\n      taskOutput={props.taskOutput}\n      description={\n        getTaskDescription(props.taskData[currentSampleIndex]) ||\n        props.interface.description\n      }\n      onChangeSample={sampleIndex => changeCurrentSampleIndex(sampleIndex)}\n    >\n      <NLPAnnotator\n        key={currentSampleIndex}\n        type=\"label-sequence\"\n        document={props.taskData[currentSampleIndex].document}\n        labels={props.interface.labels}\n        initialSequence={initialSequence}\n        onFinish={result => {\n          props.onSaveTaskOutputItem(currentSampleIndex, {\n            entities: simpleSequenceToEntitySequence(result)\n          })\n        }}\n      />\n    </SampleContainer>\n  )\n}\n\nexport default TextEntityRecognition\n","// @flow\n\nimport React, { useState } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Annotator from \"react-image-annotate\"\n\nconst useStyles = makeStyles({})\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nfunction getRandomColor() {\n  var h = getRandomInt(0, 360)\n  var s = 100\n  var l = 50\n  return \"hsl(\"\n    .concat(h, \",\")\n    .concat(s, \"%,\")\n    .concat(l, \"%)\")\n}\n\nconst rid = () =>\n  Math.random()\n    .toString()\n    .split(\".\")[1]\n\nconst convertToRIARegionFmt = region => {\n  switch (region.regionType) {\n    case \"bounding-box\": {\n      return {\n        id: rid(),\n        cls: region.classification,\n        color: region.color || getRandomColor(),\n        type: \"box\",\n        x: region.centerX - region.width / 2,\n        y: region.centerY - region.height / 2,\n        w: region.width,\n        h: region.height\n      }\n    }\n    case \"point\": {\n      return {\n        id: rid(),\n        type: \"point\",\n        cls: region.classification,\n        color: region.color || getRandomColor(),\n        x: region.x,\n        y: region.y\n      }\n    }\n    case \"polygon\": {\n      return {\n        id: rid(),\n        type: \"polygon\",\n        cls: region.classification,\n        color: region.color || getRandomColor(),\n        open: false,\n        points: region.points.map(p => [p.x, p.y])\n      }\n    }\n    case \"line\":\n    case \"pixel-mask\": {\n      throw new Error(`Unsupported region \"${JSON.stringify(region)}\"`)\n    }\n  }\n}\n\nconst convertFromRIARegionFmt = riaRegion => {\n  switch (riaRegion.type) {\n    case \"point\": {\n      return {\n        regionType: \"point\",\n        x: riaRegion.x,\n        y: riaRegion.y,\n        classification: riaRegion.cls,\n        color: riaRegion.color\n      }\n    }\n    case \"box\": {\n      return {\n        regionType: \"bounding-box\",\n        centerX: riaRegion.x + riaRegion.w / 2,\n        centerY: riaRegion.y + riaRegion.h / 2,\n        width: riaRegion.w,\n        height: riaRegion.h,\n        classification: riaRegion.cls,\n        color: riaRegion.color\n      }\n    }\n    case \"polygon\": {\n      return {\n        regionType: \"polygon\",\n        classification: riaRegion.cls,\n        color: riaRegion.color,\n        points: riaRegion.points.map(([x, y]) => ({ x, y }))\n      }\n    }\n  }\n  throw new Error(`Unsupported riaRegion \"${JSON.stringify(riaRegion)}\"`)\n}\n\nconst convertToRIAImageFmt = ({ taskDatum: td, index: i, output }) => {\n  console.log({ output })\n  if ((td || {}).imageUrl) {\n    return {\n      src: td.imageUrl,\n      name: `Sample ${i + 1}`,\n      regions: !output\n        ? undefined\n        : Array.isArray(output)\n          ? output.map(convertToRIARegionFmt)\n          : [convertToRIARegionFmt(output)]\n    }\n  }\n  throw new Error(`Task Datum not supported \"${JSON.stringify(td)}\"`)\n}\n\nconst regionTypeToTool = {\n  \"bounding-box\": \"create-box\",\n  polygon: \"create-polygon\",\n  \"full-segmentation\": \"create-polygon\",\n  point: \"create-point\"\n}\n\nexport default ({ interface: iface, taskData = [], taskOutput = [] }) => {\n  const c = useStyles()\n  const [selectedIndex, changeSelectedIndex] = useState(0)\n\n  const { regionTypesAllowed = [\"bounding-box\"] } = iface\n\n  const isClassification = Boolean(iface.multipleRegionLabels)\n\n  const labelProps = isClassification\n    ? {\n        regionClsList: iface.availableLabels\n      }\n    : {\n        regionTagList: iface.availableLabels\n      }\n\n  return (\n    <Annotator\n      selectedImage={taskData[selectedIndex].src}\n      taskDescription={iface.description}\n      {...labelProps}\n      enabledTools={[\"select\"].concat(\n        regionTypesAllowed.map(rt => regionTypeToTool[rt]).filter(Boolean)\n      )}\n      images={taskData.map((taskDatum, index) =>\n        convertToRIAImageFmt({\n          taskDatum,\n          output: taskOutput[index],\n          index\n        })\n      )}\n      onExit={output => {\n        console.log(output)\n      }}\n    />\n  )\n}\n","import React, { useState } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport getTaskDescription from \"../../utils/get-task-description.js\"\nimport SampleContainer from \"../SampleContainer\"\n\nexport const DataEntry = props => {\n  const [currentSampleIndex, changeCurrentSampleIndex] = useState(0)\n  return (\n    <SampleContainer\n      {...props.containerProps}\n      currentSampleIndex={currentSampleIndex}\n      totalSamples={props.taskData.length}\n      taskOutput={props.taskOutput}\n      description={\n        getTaskDescription(props.taskData[currentSampleIndex]) ||\n        props.interface.description\n      }\n      onChangeSample={sampleIndex => changeCurrentSampleIndex(sampleIndex)}\n    >\n      <Survey\n        key={currentSampleIndex}\n        variant=\"flat\"\n        form={\n          props.taskData[currentSampleIndex].surveyjs ||\n          props.interface.surveyjs\n        }\n        defaultAnswers={\n          props.taskOutput && props.taskOutput[currentSampleIndex]\n            ? props.taskOutput[currentSampleIndex]\n            : undefined\n        }\n        completeText=\"Save\"\n        onFinish={answers => {\n          props.onSaveTaskOutputItem(currentSampleIndex, answers)\n        }}\n      />\n    </SampleContainer>\n  )\n}\n\nexport default DataEntry\n","// @flow\n\nimport React from \"react\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 50,\n    textAlign: \"center\"\n  },\n  title: {\n    margin: 50\n  },\n  explain: {}\n})\n\nexport default ({ title, description, children }) => {\n  const c = useStyles()\n  return (\n    <div className={c.root}>\n      <Typography variant=\"h3\" component=\"div\" className={c.title}>\n        {title}\n      </Typography>\n      <Typography variant=\"h5\" component=\"div\" className={c.explain}>\n        {description || children}\n      </Typography>\n    </div>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport BadOHA from \"../BadOHA\"\n\nexport default () => {\n  return (\n    <BadOHA title=\"No Samples to Show\">\n      Make sure that <code>taskData</code> is defined and not empty.\n      <br />\n      <br />\n      Need help setting up? <a href=\"#\">Check out this tutorial.</a>\n    </BadOHA>\n  )\n}\n","// @flow\n\nimport React, { useMemo } from \"react\"\nimport TextClassification from \"../TextClassification\"\nimport TextEntityRecognition from \"../TextEntityRecognition\"\nimport ImageSegmentation from \"../ImageSegmentation\"\nimport DataEntry from \"../DataEntry\"\nimport EmptySampleContainer from \"../EmptySampleContainer\"\nimport BadOHA from \"../BadOHA\"\n\nexport const UniversalDataViewer = ({\n  oha,\n  hideHeader,\n  hideDescription,\n  datasetName,\n  requireCompleteToPressNext,\n  onSaveTaskOutputItem\n}) => {\n  // TODO type check w/ superstruct against oha\n  const containerProps = useMemo(\n    () => ({\n      hideHeader,\n      hideDescription,\n      datasetName,\n      requireCompleteToPressNext\n    }),\n    [hideHeader, hideDescription, requireCompleteToPressNext, datasetName]\n  )\n\n  if (!oha) {\n    return (\n      <BadOHA\n        title=\"Null OHA\"\n        description=\"Your OHA file isn't defined for some reason.\"\n      />\n    )\n  }\n\n  if (!oha.taskData || oha.taskData.length === 0) {\n    return <EmptySampleContainer />\n  }\n\n  switch (oha.interface.type) {\n    case \"data_entry\":\n      return (\n        <DataEntry\n          containerProps={containerProps}\n          {...oha}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n        />\n      )\n    case \"text_classification\":\n      return (\n        <TextClassification\n          containerProps={containerProps}\n          {...oha}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n        />\n      )\n    case \"text_entity_recognition\":\n      return (\n        <TextEntityRecognition\n          containerProps={containerProps}\n          {...oha}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n        />\n      )\n    case \"image_segmentation\":\n      return (\n        <ImageSegmentation\n          containerProps={containerProps}\n          {...oha}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n        />\n      )\n    default:\n      return `\"${oha.interface.type}\" not supported`\n  }\n}\n\nexport default UniversalDataViewer\n","// @flow\nimport React, { useState, useEffect } from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  textField: {\n    color: \"#fff\"\n  }\n})\n\nconst SAVE_WAIT = 2000\n\nexport default ({ value, onChange }) => {\n  const c = useStyles()\n  const [{ editing, newValue }, changeEditing] = useState({\n    editing: false\n  })\n\n  useEffect(() => {\n    let listener = e => {\n      if (e.key === \"Enter\") {\n        onChange(newValue)\n        changeEditing({ editing: false })\n      }\n    }\n    window.addEventListener(\"keydown\", listener)\n    return () => {\n      window.removeEventListener(\"keydown\", listener)\n    }\n  }, [editing, newValue])\n\n  useEffect(() => {\n    if (editing) {\n      let timeout = setTimeout(\n        () => {\n          onChange(newValue)\n          changeEditing({ editing: false })\n        },\n        value === newValue ? SAVE_WAIT * 5 : SAVE_WAIT\n      )\n\n      return () => {\n        if (timeout) clearTimeout(timeout)\n      }\n    } else {\n      return () => {}\n    }\n  }, [editing, newValue])\n\n  return editing ? (\n    <TextField\n      autoFocus\n      className={c.textField}\n      InputProps={{\n        inputProps: { style: { color: \"#fff\" } }\n      }}\n      onChange={e => {\n        changeEditing({\n          editing: true,\n          newValue: e.target.value\n        })\n      }}\n      value={newValue}\n    />\n  ) : (\n    <span\n      onClick={() => {\n        if (onChange) {\n          changeEditing({ editing: true, newValue: value })\n        }\n      }}\n    >\n      {value}\n    </span>\n  )\n}\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Grid from \"@material-ui/core/Grid\"\nimport Button from \"@material-ui/core/Button\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\"\nimport GithubIcon from \"../Header/GithubIcon.js\"\nimport Header from \"../Header\"\nimport brace from \"brace\"\nimport AceEditor from \"react-ace\"\nimport NextIcon from \"@material-ui/icons/KeyboardArrowRight\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport defaultOHAObject from \"./default-oha-object\"\nimport UniversalDataViewer from \"../UniversalDataViewer\"\nimport EditableTitleText from \"./EditableTitleText.js\"\n\nimport \"brace/mode/javascript\"\nimport \"brace/theme/github\"\n\nconst useStyles = makeStyles({\n  headerButton: {\n    color: \"#fff\"\n  },\n  saveIcon: {\n    marginRight: 4\n  },\n  editIcon: {\n    marginLeft: 4\n  }\n})\n\nexport default ({\n  datasetName = \"Universal Data Tool\",\n  oha,\n  content,\n  fileName = \"unnamed\",\n  onChangeFileName,\n  onChangeContent = () => null,\n  onChangeOHA = () => null,\n  onFileDrop,\n  initialMode = \"json\"\n}) => {\n  const c = useStyles()\n  const [mode, changeMode] = useState(initialMode)\n  const [jsonText, changeJSONText] = useState(content || defaultOHAObject)\n\n  useEffect(\n    () => {\n      onChangeContent(jsonText)\n      try {\n        // schema validation etc.\n        onChangeOHA(JSON.parse(jsonText))\n      } catch (e) {}\n    },\n    [jsonText]\n  )\n\n  return (\n    <div>\n      <Header\n        title={\n          <>\n            {(mode === \"json\" ? \"JSON Editor\" : \"Sample Editor\") + \" - \"}\n            <EditableTitleText onChange={onChangeFileName} value={fileName} />\n          </>\n        }\n        additionalButtons={[\n          // <IconButton disabled className={c.headerButton}>\n          //   <SaveIcon className={c.saveIcon} />\n          // </IconButton>,\n          mode === \"json\" ? (\n            <Button\n              onClick={() => changeMode(\"sample\")}\n              className={c.headerButton}\n            >\n              Switch to Sample Editor\n              <NextIcon />\n            </Button>\n          ) : (\n            <Button\n              onClick={() => changeMode(\"json\")}\n              className={c.headerButton}\n            >\n              Switch to JSON Editor\n              <EditIcon className={c.editIcon} />\n            </Button>\n          )\n        ]}\n      />\n      <div>\n        {mode === \"json\" ? (\n          <AceEditor\n            theme=\"github\"\n            mode=\"javascript\"\n            width=\"100%\"\n            value={jsonText}\n            editorProps={{ $blockScrolling: Infinity }}\n            onChange={t => changeJSONText(t)}\n          />\n        ) : (\n          <UniversalDataViewer\n            onSaveTaskOutputItem={(index, output) => {\n              const newOHA = { ...oha }\n              if (!newOHA.taskOutput)\n                newOHA.taskOutput = newOHA.taskData.map(td => null)\n              newOHA.taskOutput[index] = output\n              changeJSONText(JSON.stringify(newOHA, null, \"  \"))\n            }}\n            oha={oha}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n","// @flow\nimport React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { red } from \"@material-ui/core/colors\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport Fade from \"@material-ui/core/Fade\"\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"fixed\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    alignItems: \"center\",\n    pointerEvents: \"none\"\n  },\n  errorBox: {\n    display: \"flex\",\n    backgroundColor: red[700],\n    color: \"#fff\",\n    padding: 4,\n    marginBottom: 4\n  }\n})\n\nexport default ({ errors }) => {\n  const c = useStyles()\n  return (\n    <div className={c.root}>\n      {errors.map(err => (\n        <Collapse key={err.id} in={err.life < 5000}>\n          <Fade in={err.life > 500}>\n            <div className={c.errorBox}>{err.message}</div>\n          </Fade>\n        </Collapse>\n      ))}\n    </div>\n  )\n}\n","// @flow\nimport React, { useState, useMemo } from \"react\"\nimport { HeaderContext } from \"../Header\"\nimport StartingPage from \"../StartingPage\"\nimport OHAEditor from \"../OHAEditor\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport ErrorToasts from \"../ErrorToasts\"\nimport useErrors from \"../../utils/use-errors.js\"\nimport useLocalStorage from \"../../utils/use-local-storage.js\"\n\nconst useStyles = makeStyles({\n  empty: {\n    textAlign: \"center\",\n    padding: 100,\n    color: \"#666\",\n    fontSize: 28\n  }\n})\n\nexport default () => {\n  const c = useStyles()\n  const [pageName, changePageName] = useState(\"welcome\")\n  const [currentFile, changeCurrentFile] = useState()\n  const [oha, changeOHA] = useState()\n  const [errors, addError] = useErrors()\n  let [recentItems, changeRecentItems] = useLocalStorage(\"recentItems\", [])\n  if (!recentItems) recentItems = []\n\n  const onCreateTemplate = useMemo(\n    () => template => {\n      changeCurrentFile({\n        fileName: \"unnamed\",\n        content: JSON.stringify(template.oha, null, \"  \"),\n        id: Math.random()\n          .toString()\n          .split(\".\")[1]\n      })\n      changeOHA(template.oha)\n      changePageName(\"edit\")\n    },\n    []\n  )\n\n  const openRecentItem = useMemo(() => item => {\n    changeCurrentFile(item)\n    try {\n      changeOHA(JSON.parse(item.content))\n    } catch (e) {\n      addError(\"Couldn't parse content into JSON\")\n    }\n    changePageName(\"edit\")\n  })\n\n  const onClickHome = useMemo(\n    () => () => {\n      changePageName(\"welcome\")\n    },\n    []\n  )\n\n  const handleOpenFile = useMemo(\n    () => file => {\n      const fileName = file.name\n      const reader = new FileReader()\n      reader.onload = e => {\n        const content = e.target.result\n        try {\n          const oha = JSON.parse(content)\n          // TODO validate OHA and prompt to open anyway if invalid\n          changeCurrentFile({\n            fileName,\n            content,\n            id: Math.random()\n              .toString()\n              .split(\".\")[1]\n          })\n          changeOHA(oha)\n          changePageName(\"edit\")\n        } catch (e) {\n          console.log(e.toString())\n          addError(`Could not read file \"${file.name}\"`)\n        }\n      }\n      reader.readAsText(file)\n    },\n    []\n  )\n\n  return (\n    <>\n      <HeaderContext.Provider\n        value={{\n          recentItems,\n          onClickTemplate: onCreateTemplate,\n          onClickHome,\n          onOpenFile: handleOpenFile,\n          onOpenRecentItem: openRecentItem\n        }}\n      >\n        {pageName === \"welcome\" ? (\n          <StartingPage\n            onFileDrop={handleOpenFile}\n            onOpenTemplate={onCreateTemplate}\n          />\n        ) : pageName === \"edit\" && currentFile ? (\n          <OHAEditor\n            key={currentFile.id}\n            {...currentFile}\n            oha={oha}\n            onChangeFileName={newName => {\n              changeCurrentFile({ ...currentFile, fileName: newName })\n            }}\n            onChangeContent={newContent => {\n              const newFile = { ...currentFile, content: newContent }\n              changeCurrentFile(newFile)\n              if (recentItems.map(item => item.id).includes(newFile.id)) {\n                changeRecentItems(\n                  recentItems.map(ri => (ri.id === newFile.id ? newFile : ri))\n                )\n              } else {\n                changeRecentItems([newFile].concat(recentItems).slice(0, 3))\n              }\n            }}\n            onChangeOHA={changeOHA}\n          />\n        ) : (\n          <div className={c.empty}>Unknown Page \"{pageName}\"</div>\n        )}\n      </HeaderContext.Provider>\n      <ErrorToasts errors={errors} />\n    </>\n  )\n}\n","// @flow\n\nimport { useState, useEffect } from \"react\"\n\nconst REFRESH_INTERVAL = 100\n\nexport default () => {\n  const [errors, changeErrors] = useState([])\n  useEffect(() => {\n    if (errors.length === 0) return () => {}\n    let interval = setInterval(() => {\n      changeErrors(\n        errors\n          .map(err => ({\n            ...err,\n            life: err.life - REFRESH_INTERVAL\n          }))\n          .filter(err => err.life > 0)\n      )\n    }, REFRESH_INTERVAL)\n    return () => clearInterval(interval)\n  }, [errors])\n\n  function addError(message: string) {\n    changeErrors(\n      errors.concat([\n        {\n          id: Math.random()\n            .toString()\n            .split(\".\")[1],\n          message,\n          life: 5000\n        }\n      ])\n    )\n  }\n\n  return [errors, addError]\n}\n","// @flow\n\nimport { useState } from \"react\"\n\nexport default (key: string, defaultValue: Object) => {\n  const [state, changeState] = useState(() => {\n    try {\n      return JSON.parse(window.localStorage.getItem(key))\n    } catch (e) {\n      return defaultValue\n    }\n  })\n\n  const changeValue = newValue => {\n    window.localStorage.setItem(key, JSON.stringify(newValue))\n    changeState(newValue)\n  }\n\n  return [state, changeValue]\n}\n","import React from \"react\"\nimport Theme from \"./components/Theme\"\nimport LocalStorageApp from \"./components/LocalStorageApp\"\n\nfunction App() {\n  return (\n    <Theme>\n      <LocalStorageApp />\n    </Theme>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}